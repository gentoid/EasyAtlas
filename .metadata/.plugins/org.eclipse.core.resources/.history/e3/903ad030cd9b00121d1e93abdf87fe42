package ru.osm.dkiselev.atlasgenerator;

import java.awt.Rectangle;
import java.awt.geom.Area;
import java.awt.geom.Rectangle2D;
import java.util.logging.Level;
import java.util.logging.Logger;

public class GridGenerator {
	
	private Area coverage = null;
	private Rectangle[][] grid = null;
	
	private static final Logger logger = Logger.getLogger(GridGenerator.class.getName());
	
	public GridGenerator(Area coverage) {
		super();
		this.coverage = coverage;
	}

	public Rectangle[][] getGrid() {
		return grid;
	}
	
	public void generate(double bboxWidthM, double bboxHeightM)
	{
		Rectangle2D coverageBox = coverage.getBounds2D();
		Point basePoint = new Point(coverageBox.getMinX(), coverageBox.getMinY());
		
		int columns = 0;
		Point p = basePoint;
		do {
			p = Calculator.addOffset(p, bboxWidthM, 0);
			columns++;
		}while(p.getLon() < coverageBox.getMaxX() && columns < 100);

		int rows = 0;
		p = basePoint;
		do {
			p = Calculator.addOffset(p, 0, bboxHeightM);
			rows++;
		}while(p.getLat() < coverageBox.getMaxY() && rows < 100);
		
		logger.log(Level.INFO, "Grid size {0}Ñ…{1}", new Object[]{columns, rows});

		if(columns * rows > 200) {
			logger.severe("Atlas is too large.");
			return;
		}
		
		grid = new Rectangle[columns][rows];
		
		p = basePoint;
		for(int j =0; j < rows; j++) {
			for
		}
	}
	
}
